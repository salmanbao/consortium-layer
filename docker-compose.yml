volumes:
  prometheus_data: {}
  grafana_data: {}
  phlare_data: {}
  layer-1: {}
  layer-2: {}
  layer-3: {}

services:
  layer-1:
    image: tharsishq/evmos:v20.0.0
    restart: always
    container_name: layer-1
    networks:
      - blockchain_network
    volumes:
      - layer-1:/home/evmos/data
      - ./node.sh:/home/evmos/node.sh
    ports:
      - 6065:6065
      - 8545:8545
      - 26660:26660
      - 1317:1317
      - 8646:8546
      - 26657:26657
    user: "root"
    command:
      - ./node.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:26657/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  layer-2:
    image: tharsishq/evmos:v20.0.0
    restart: always
    container_name: layer-2
    networks:
      - blockchain_network
    volumes:
      - layer-2:/home/evmos/data
      - ./node.sh:/home/evmos/node.sh
    ports:
      - 6066:6065
      - 8546:8545
      - 26661:26660
      - 1318:1317
      - 8647:8546
      - 26658:26657
    user: "root"
    command:
      - ./node.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:26657/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  layer-3:
    image: tharsishq/evmos:v20.0.0
    restart: always
    container_name: layer-3
    networks:
      - blockchain_network
    volumes:
      - layer-3:/home/evmos/data
      - ./node.sh:/home/evmos/node.sh
    ports:
      - 6067:6065
      - 8547:8545
      - 26662:26660
      - 1319:1317
      - 8648:8546
      - 26659:26657
    user: "root"
    command:
      - ./node.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:26657/status"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  blockchain_network:
    external: true

  # Prometheus for monitoring
  # prometheus:
  #   image: prom/prometheus:v2.36.2
  #   restart: always
  #   container_name: prometheus
  #   volumes:
  #     - prometheus_data:/prometheus
  #     - ./prometheus/:/etc/prometheus/
  #   ports:
  #     - "9090:9090"
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana for visualization
  # grafana:
  #   image: grafana/grafana:main
  #   restart: always
  #   container_name: grafana
  #   depends_on:
  #     - prometheus
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./grafana/provisioning/:/etc/grafana/provisioning/
  #   env_file:
  #     - ./grafana/config.monitoring
  #   ports:
  #     - "8000:3000"

  # phlare:
  #   image: grafana/phlare:latest
  #   restart: always
  #   container_name: phlare
  #   ports:
  #     - "4100:4100"
  #   command: -config.file=/etc/phlare/config.yaml
  #   volumes:
  #     - phlare_data:/data
  #     - ./phlare/phlare.yaml:/etc/phlare/config.yaml

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.45.0
  #   container_name: cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /etc/machine-id:/etc/machine-id:ro
  #     - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
  #   privileged: true
  #   restart: always
  #   deploy:
  #     mode: global

  # tx-bot1:
  #   image: evmos/tx-bot-dev
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.bot
  #   container_name: tx-bot1
  #   depends_on:
  #     - single-node1
  #   environment:
  #     - CHAIN_ID=evmos_9000-1
  #     - CHAIN_ID_NUMBER=9000
  #     # 0x1cF80B60F4F58221AaFFDBb2e513C0Ef1F809494
  #     - ORCH_PRIV_KEY=0x1c384b3fb9a1cff8caee1e2d078bb9bc28a542dcc7ac779a445dc68b3dc2fe1f
  #     - RPC_URL=http://single-node1:8545
  #     - API_URL=http://single-node1:1317
  #     - LOG_LEVEL=info
  #     - NUMBER_OF_WORKERS=15
  #     - WORKER_TYPES=bank,delegate,gasConsumer,converter,ethSender
  #   restart: always
